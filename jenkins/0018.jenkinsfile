pipeline {
    agent {
        label 'master'
    }
    environment {
		DOCKERHUB_CREDENTIALS=credentials('dockerhub')
    }
    options {
        buildDiscarder(logRotator(numToKeepStr: '7'))
        // skipDefaultCheckout(true)
        disableConcurrentBuilds()
        timeout (time: 1, unit: 'HOURS')
        // timestamps()
    }
    parameters {
        string(name: 'BRANCH_NAME', defaultValue: 'main', description: '')
        string(name: 'DB_IMAGE_VERSION', defaultValue: 'develop', description: '')
        string(name: 'REDIS_IMAGE_VERSION', defaultValue: 'develop', description: '')
        string(name: 'UI_IMAGE_VERSION', defaultValue: 'develop', description: '')
        string(name: 'WEATHER_IMAGE_VERSION', defaultValue: 'develop', description: '')
        string(name: 'AUTH_IMAGE_VERSION', defaultValue: 'develop', description: '')
    }
    stages {
        stage ('Checkout') {
            steps {
                dir("${WORKSPACE}/code") {
                    checkout([
                        $class: 'GitSCM',
                        branches: [[name: "*/${params.BRANCH_NAME}"]],
                        doGenerateSubmoduleConfigurations: false,
                        extensions: [[$class: 'LocalBranch']],
                        submoduleCfg: [],
                        userRemoteConfigs: [[
                        url: 'https://github.com/DEL-ORG/a1deicole-weather-app.git',
                        credentialsId: 'github-credentials'
                        ]]
                    ])
                }
            }
        }
    
        
         stage('login') {

			steps {
				sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
			}
		}
         stage('Build ui') {
            steps {
                sh '''
            cd $WORKSPACE/code/code/ui
            docker build -t deixdevops/weather-app-ui:${BUILD_NUMBER} .
                '''
            }
        }
        // stage('Build auth') {
        //     steps {
        //         sh '''
        //     cd $WORKSPACE/code/code/auth
        //     docker build -t deixdevops/weather-app-auth:${BUILD_NUMBER} .
        //         '''
        //     }
        // }
        stage('Build weather') {
            steps {
                sh '''
            cd $WORKSPACE/code/code/weather
            docker build -t deixdevops/weather-app-weather:${BUILD_NUMBER} .
                '''
            }
        }
    }
 
    post {
        success {
            slackSend color: '#2EB67D',
            channel: 'learning', 
            message: "*Weather-app Project Build Status. Good job*" +
            "\n Project Name: Weather-app" +
            "\n Job Name: ${env.JOB_NAME}" +
            "\n Build number: ${currentBuild.displayName}" +
            "\n Build Status : *SUCCESS*" +
            "\n Build url : ${env.BUILD_URL}"
        }
        failure {
            slackSend color: '#E01E5A',
            channel: 'learning',  
            message: "*Weather-app Project Build Status*" +
            "\n Project Name: Weather-app" +
            "\n Job Name: ${env.JOB_NAME}" +
            "\n Build number: ${currentBuild.displayName}" +
            "\n Build Status : *FAILED*" +
            "\n Build User : *a1Deicole*" +
            "\n Action : Please check the console output to fix this job IMMEDIATELY" +
            "\n Build url : ${env.BUILD_URL}"
        }
        unstable {
            slackSend color: '#ECB22E',
            channel: 'learning', 
            message: "*Weather-app Project Build Status*" +
            "\n Project Name: Weather-app" +
            "\n Job Name: ${env.JOB_NAME}" +
            "\n Build number: ${currentBuild.displayName}" +
            "\n Build Status : *UNSTABLE*" +
            "\n Action : Please check the console output to fix this job IMMEDIATELY" +
            "\n Build url : ${env.BUILD_URL}"
        }   
    }
}